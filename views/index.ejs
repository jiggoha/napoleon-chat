<!DOCTYPE html>
<html>
  <head>
    <title>Socket.IO chat</title>
    <style>
      * { margin: 0; padding: 0; box-sizing: border-box; }
      body { font: 13px Helvetica, Arial; }
      form { background: #000; padding: 3px; position: fixed; bottom: 0; width: 100%; }
      form input { border: 0; padding: 10px; width: 90%; margin-right: .5%; }
      form button { width: 9%; background: rgb(130, 224, 255); border: none; padding: 10px; }
      #messages { list-style-type: none; margin: 0; padding: 0; }
      #messages li { padding: 5px 10px; }
      #messages li:nth-child(odd) { background: #eee; }
    </style>
  </head>

  <body>
    <p id='cards_label' style="color: white; background-color: #3234A1; font-size: 24px; display: inline">Cards:</p>
    <ul id="messages"></ul>
    <form action="">
      <input id="m" autocomplete="off" /><button>Send</button>
    </form>

    <script src="/socket.io/socket.io.js"></script>
    <script src="http://code.jquery.com/jquery-1.11.1.js"></script>
    <script>
      var socket = io(); // defaults to connecting to the URL of the 

      $('form').submit(function() {    
        socket.emit('chat message', $('#m').val());
        $('#m').val('');
        socket.emit('not typing', socket.username);
        return false;
      });

      $('#m').keyup(function() {
        if (($('#m').val() != '') && !($('#' + socket.username + '_is_typing').text())) {
          socket.emit('is typing', socket.username);
        }
      });

      socket.on('display typing', function(username) {
        $('#messages').after($("<div id='" + username + "_is_typing'>").text(username + " is typing..."))
      });

      socket.on('remove typing', function(username) {
        $("#"+ username + "_is_typing").remove();
      });

      socket.on('show users', function(usernames){
        if ($('#user_list')[0]) {
          $('#user_list').text("In this room: " + usernames.join(", "));
        } else {
          $('#messages').before($("<div id='user_list'>").text("In this room: " + usernames.join(", ")));
        }
      });

      socket.on('load previous messages', function(messages) {
        for (i = 0; i < messages.length; i++) {
          display_message(messages[i]);
        }
      });

      socket.on('prompt username', function(username) {
        var username = prompt("What is your name?");
        socket.username = username;
        socket.emit('add username', username);
      });

      socket.on('announce new user', function(username) {
        display_message(username + " joined");
      });
      
      socket.on('chat message', function(username, msg) {
        display_message(username + ": " + msg);
      });

      socket.on('user disconnected', function(username) {
        display_message(username + " left");
      });

      socket.on('first deal', function() {
        socket.emit('ask for cards', socket.username);
      });

      socket.on('receive cards', function(cards) {
        for (var i=0; i<cards.length; i++) {
          $('#cards_label').after($('<p>' + cards[i].value + '</p>'));
        }
      });

      function display_message(text) {
        var last_message = $('#messages li:last').text()

        if (last_message.split(" ")[0] == text.split(" ")[0]) {
          $('#messages li:last').append($('<br>'));
          $('#messages li:last').append(text);
        } else {
          $('#messages').append($('<li>').text(text));
        }
      }
    </script>
  </body>

</html>